<?php

namespace Src\Controllers;

use Sober\Controller\Controller;

class PageNewsEvents extends Controller
{


    public function __construct()
    {


    }

    public function __before()
    {

        parent::__before(); // TODO: Change the autogenerated stub

    }

    public function news_posts()
    {

        return self::get_posts();

    }

    public function news_categories()
    {
        $career_terms = get_terms([
            'taxonomy' => 'category',
            'exclude' => [1], // Don't show Uncategorized category
            'include_children' => false
        ]);

        return $career_terms;
    }

    private function get_posts()
    {
        $posts = get_posts([
            'orderby'          => 'date',
            'order'            => 'DESC',
            'post_type'        => 'post',
            'numberposts'      => -1,
            'meta_query' => [
                [
                    'key' => 'set_as_featured',
                    'value' => 0,
                    'compare' => '=='
                ]
            ]
        ]);

        return self::format_posts($posts);
    }

    private function format_posts($posts)
    {
        $formatted_posts = [];

        foreach ($posts as $post) {

            $formatted_posts[] = [
                'title' => get_the_title($post->ID),
                'link' => get_permalink($post->ID),
                'thumbnail_url' => get_the_post_thumbnail_url($post->ID),
                'excerpt' => get_the_excerpt($post->ID),
                'category_name' => self::get_news_post_term_names($post->ID),
                'category_slug' => self::get_news_post_term_slugs($post->ID),
                'post_date' => get_the_date('d/m/Y', $post->ID)
            ];
        }

        return $formatted_posts;

    }

    private function get_news_post_term_names($post_id)
    {
        $terms = wp_get_post_terms($post_id, 'category');

        $format_terms = [];

        foreach ($terms as $term) {
            $format_terms[] = $term->name;
        }

        return $format_terms;
    }

    private function get_news_post_term_slugs($post_id)
    {
        $terms = wp_get_post_terms($post_id, 'category');

        $format_terms = [];

        foreach ($terms as $term) {
            $format_terms[] = $term->slug;
        }

        return $format_terms;
    }

    private function careers_convert_to_time_ago($original_time)
    {
        $original_time = strtotime($original_time);
        return human_time_diff( $original_time, current_time( 'timestamp' ) ).' '.__( 'ago' );
    }

}
